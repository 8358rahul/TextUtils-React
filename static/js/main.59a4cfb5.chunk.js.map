{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","onClick","toggleMode","id","htmlFor","aria-current","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","name","cols","rows","onChange","event","target","value","backgroundColor","class","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","replace","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.59a4cfb5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n     <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">\r\n      <b>{props.title}</b>\r\n    </a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n  </div>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n            Home\r\n          </a>  \r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">\r\n            About Us\r\n          </Link>\r\n        </li> */}\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n  </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n \r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set Title Here\",\r\n};\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text,setText] = useState('');\r\n\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\", \"success\")\r\n    }\r\n    const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lower!\", \"success\")\r\n\r\n    }\r\n    const handleCopy =()=>{\r\n        let text = document.getElementById('myBox')\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value)\r\n        props.showAlert(\"Copied to clipboard!\", \"success\")\r\n\r\n    }\r\n    const handleExtraSpaces =()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra spaces removed!\", \"success\")\r\n\r\n    }\r\n    const handleRemovePun=()=>{\r\n        const regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\r\n        let newText= text.replace(regex,\"\");\r\n        setText(newText)\r\n        props.showAlert(\"Remove punchutions!\", \"success\")\r\n\r\n    }\r\n    const handleClearClick = ()=>{\r\n        let newText = \"\";\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared!\", \"success\")\r\n\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value)\r\n    }\r\n  return (\r\n    <>\r\n    <div className='container' style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n    <h1>{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n        <textarea className='form-control' name=\"myBox\" id=\"myBox\" cols=\"30\" rows=\"10\" onChange={handleOnChange} value={text} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'#042743'}}></textarea>\r\n    </div>\r\n    <div class=\"d-auto\">\r\n    <button type=\"button\" className='btn btn-primary mx-1 my-1' onClick={handleUpClick}>Convert To UpperCase</button>\r\n    <button type=\"button\" className='btn btn-primary mx-1 my-1' onClick={handleLoClick}>Convert To LowerCase</button>\r\n    <button type=\"button\" className='btn btn-primary mx-1 my-1' onClick={handleCopy}>Copy Text</button>\r\n    <button type=\"button\" className='btn btn-primary mx-1 my-1' onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    <button type=\"button\" className='btn btn-primary mx-1 my-1' onClick={handleRemovePun}>Remove Punctuation</button>\r\n    <button type=\"button\" className='btn btn-primary mx-1 my-1' onClick={handleClearClick}>Clear</button>\r\n    </div>\r\n    </div>\r\n\r\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n        <h2>Your Text Summery</h2>\r\n        <p>{text.split(\" \").length} Words And {text.length} Characters</p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter Something In The Textbox Above To Priview It Here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n        props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n  )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport React, { useState } from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode,setMode] = useState('light');//Whether dark mode is enaled or not\n  const [alert,setAlert] = useState(null);\n\n  const showAlert =(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type,\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n\n  const toggleMode =()=>{\n    if(mode ==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title=\"TextUtils - Dark Mode\"\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title=\"TextUtils - Light Mode\"\n\n            \n    }\n    }\n  \n  return (\n    <>\n{/* <Router> */}\n  <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} /> \n  <Alert alert={alert}/>\n  {/* // <Switch> */}\n          {/* <Route path=\"/about\"> */}\n          {/* //   <About />\n          // </Route> */}\n          {/* // <Route path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text analyze below\" mode={mode}/> \n          {/* // </Route> */}\n    {/* </Switch> */}\n\n  {/* // </Router>   */}\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}